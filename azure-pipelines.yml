trigger:
  branches:
    exclude:
    - '*'

pr:
  branches:
    include:
    - '*'

variables:
  - name: targetFolder
    value: ''  # This variable will be set dynamically based on the changed folder
  - name: pythonVersion
    value: ''
  - name: qaPath
    value: ''

jobs:
- job: SetTargetFolder
  displayName: 'Detect Changed Folder'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
    persistCredentials: true
    clean: true
    displayName: "Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)"
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Fetch all the branches and tags to ensure we have the commit in history
        env
        ls -la
        git log
        git branch -a && echo "Done"
        git diff --name-only HEAD^..HEAD | tail -1 | grep -o '^[^/]*' ; git branch
        git fetch --all

        # Get the commit hash for the latest commit on the branch
        $commitHash = git rev-parse $(Build.SourceBranchName)

        # Get the commit hash for the parent of the latest commit
        $parentCommitHash = git rev-parse $(Build.SourceBranchName)^

        # Set the commit range
        $commitRange = "$($parentCommitHash)..$($commitHash)"

        # Get the changed files
        $changedFiles = git diff --name-only $commitRange

        # Loop through the changed files to find the common folder path
        $commonFolder = ""
        foreach ($file in $changedFiles) {
          if ($file -like "artifacts/*") {
            $commonFolder = "artifacts"
            break
          }
          elseif ($file -like "mlruns/*") {
            $commonFolder = "mlruns"
            break
          }
        }

        # Set Python version and QA_PATH based on the detected folder
        if ($commonFolder -eq "artifacts") {
          Write-Host "##vso[task.setvariable variable=targetFolder]artifacts"
          Write-Host "##vso[task.setvariable variable=pythonVersion]3.8"
          Write-Host "##vso[task.setvariable variable=qaPath]artifacts/QA_OLD"
        }
        elseif ($commonFolder -eq "mlruns") {
          Write-Host "##vso[task.setvariable variable=targetFolder]mlruns"
          Write-Host "##vso[task.setvariable variable=pythonVersion]3.9"
          Write-Host "##vso[task.setvariable variable=qaPath]mlruns/QA_NEW"
        }

        # Run the `git diff` command with the `--` option
        git diff -- $commitRange
    displayName: 'Detect Changed Folder'

- job: CreateWheelFile
  displayName: 'Create Wheel File'
  dependsOn: SetTargetFolder
  condition: and(succeeded(), ne(variables.targetFolder, ''))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo "Setting Python version to $(pythonVersion)"
      echo "Setting QA_PATH to $(qaPath)"
      cd $(targetFolder)
      ls -la
      # Replace the following command with the actual wheel file creation command for artifacts or mlruns
      echo "Creating wheel file in $(targetFolder)"
      env
    displayName: 'Create Wheel File'
